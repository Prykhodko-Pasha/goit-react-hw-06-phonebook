{"version":3,"sources":["components/Section/Section.module.css","components/Form/Form.module.css","components/Section/Section.js","redux/actions.js","components/Form/Form.js","components/ContactsItem/ContactsItem.js","components/Contacts/Contacts.js","components/ContactsSearch/ContactsSearch.js","components/App.js","redux/reducer.js","redux/store.js","index.js","components/Contacts/Contacts.module.css"],"names":["module","exports","Section","title","children","className","s","section","section__title","addContact","createAction","name","number","payload","id","uuidv4","delContact","searchContact","connect","state","items","contacts","dispatch","onAddContact","actions","useState","setName","setNumber","onChange","e","currentTarget","value","reset","form","onSubmit","preventDefault","filter","item","toLowerCase","length","alert","type","placeholder","pattern","required","form__btn","onDelContact","del__btn","onClick","visibleContacts","includes","getVisibleContacts","contacts__list","map","contacts__item","event","target","wrapper","text","reducers","createReducer","newContactsArr","persistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","App","document","getElementById"],"mappings":"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","file":"static/js/main.ad381997.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1Q3v4\",\"section__title\":\"Section_section__title__J2fGn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__BZ4td\",\"form__btn\":\"Form_form__btn__ez-UP\"};","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <div className={s.section}>\r\n      <h2 className={s.section__title}>{title}</h2>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.element.isRequired,\r\n};\r\n","import { createAction } from '@reduxjs/toolkit';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const addContact = createAction('Phonebook/add', (name, number) => ({\r\n  payload: { name: name, number: number, id: uuidv4() },\r\n}));\r\n\r\nexport const delContact = createAction('Phonebook/del');\r\n\r\nexport const searchContact = createAction('Phonebook/search');\r\n\r\n//======= vinilla redux =======\r\n// import * as types from './types';\r\n// import { v4 as uuidv4 } from 'uuid';\r\n\r\n// export const addContact = (name, number) => {\r\n//   return {\r\n//     type: types.ADD,\r\n//     payload: { name: name, number: number, id: uuidv4() },\r\n//   };\r\n// };\r\n\r\n// export const delContact = contactId => ({\r\n//   type: types.DEL,\r\n//   payload: contactId,\r\n// });\r\n\r\n// export const searchContact = value => ({\r\n//   type: types.SEARCH,\r\n//   payload: value,\r\n// });\r\n","import { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport s from './Form.module.css';\r\nimport * as actions from '../../redux/actions';\r\n\r\nfunction Form({ items, onAddContact }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const onChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    const isContactExist = items.filter(\r\n      item => item.name.toLowerCase() === name.toLowerCase(),\r\n    );\r\n    if (isContactExist.length === 0) {\r\n      onAddContact(name, number);\r\n    } else {\r\n      alert(`${name} is already in contacts.`);\r\n    }\r\n\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={onSubmit}>\r\n      <label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          placeholder=\"Name\"\r\n          value={name}\r\n          onChange={onChange}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n      </label>\r\n      <br />\r\n      <label>\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          placeholder=\"Number\"\r\n          value={number}\r\n          onChange={onChange}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n      </label>\r\n\r\n      <button className={s.form__btn} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    items: state.contacts.items,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onAddContact: (name, number) => dispatch(actions.addContact(name, number)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\r\n","import { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport s from '../Contacts/Contacts.module.css';\r\nimport * as actions from '../../redux/actions';\r\n\r\nfunction ContactsItem({ id, name, number, onDelContact }) {\r\n  return (\r\n    <>\r\n      <p>\r\n        {name}: {number}\r\n      </p>\r\n      <button\r\n        className={s.del__btn}\r\n        type=\"button\"\r\n        onClick={() => onDelContact(id)}\r\n      >\r\n        Delete\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n\r\nContactsItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  // onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDelContact: id => dispatch(actions.delContact(id)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactsItem);\r\n","import { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Contacts.module.css';\r\nimport ContactsItem from '../ContactsItem/ContactsItem';\r\n\r\nfunction Contacts({ contacts }) {\r\n  return (\r\n    <ul className={s.contacts__list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id} className={s.contacts__item}>\r\n          <ContactsItem id={id} name={name} number={number} />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContacts.propTypes = {\r\n  contactsArr: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nconst getVisibleContacts = (items, filter) => {\r\n  return items.filter(item => item.name.toLowerCase().includes(filter));\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  const { items, filter } = state.contacts;\r\n  const visibleContacts = getVisibleContacts(items, filter);\r\n  return {\r\n    contacts: visibleContacts,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Contacts);\r\n","import { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport s from '../Contacts/Contacts.module.css';\r\nimport * as actions from '../../redux/actions';\r\n\r\nfunction ContactsSearch({ value, onChange }) {\r\n  return (\r\n    <label className={s.wrapper}>\r\n      <input\r\n        placeholder=\"Find contacts by name\"\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nContactsSearch.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  value: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: event =>\r\n    dispatch(actions.searchContact(event.target.value.toLowerCase())),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsSearch);\r\n","import { connect } from 'react-redux';\nimport Section from './Section/Section';\nimport Form from './Form/Form';\nimport Contacts from './Contacts/Contacts';\nimport ContactsSearch from './ContactsSearch/ContactsSearch';\nimport s from './Contacts/Contacts.module.css';\n// import store from '../redux/store';\n\nfunction Phonebook({ items }) {\n  return (\n    // <Provider store={store.store}>\n    <>\n      <Section title=\"Phonebook\">\n        <Form />\n      </Section>\n      <Section title=\"Contacts\">\n        {items.length > 0 ? (\n          <>\n            <ContactsSearch />\n            <Contacts />\n          </>\n        ) : (\n          <div className={s.wrapper}>\n            <p className={s.text}>No contacts yet</p>\n          </div>\n        )}\n      </Section>\n    </>\n    // </Provider>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    items: state.contacts.items,\n  };\n};\n\nexport default connect(mapStateToProps)(Phonebook);\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport * as actions from './actions';\r\n\r\nconst initialState = {\r\n  items: [],\r\n  filter: '',\r\n};\r\n\r\nconst reducers = createReducer(initialState, {\r\n  [actions.addContact]: (state, { payload }) => {\r\n    return { ...state, items: [...state.items, payload] };\r\n  },\r\n  [actions.delContact]: (state, { payload }) => {\r\n    const newContactsArr = state.items.filter(item => item.id !== payload);\r\n    return { ...state, items: newContactsArr };\r\n  },\r\n  [actions.searchContact]: (state, { payload }) => ({\r\n    ...state,\r\n    filter: payload,\r\n  }),\r\n});\r\n\r\nexport default reducers;\r\n\r\n//======= vinilla redux =======\r\n// import * as types from './types';\r\n\r\n// const parsedContacts = JSON.parse(localStorage.getItem('contacts'));\r\n\r\n// const initialState = {\r\n//   items: parsedContacts || [],\r\n//   filter: '',\r\n// };\r\n\r\n// const reducers = (state = initialState, { type, payload }) => {\r\n//   const { items } = state;\r\n\r\n//   switch (type) {\r\n//     case types.ADD:\r\n//       localStorage.setItem('contacts', JSON.stringify([...items, payload]));\r\n//       return { ...state, items: [...items, payload] };\r\n\r\n//     case types.DEL:\r\n//       const newContactsArr = items.filter(item => item.id !== payload);\r\n//       localStorage.setItem('contacts', JSON.stringify(newContactsArr));\r\n//       return { ...state, items: newContactsArr };\r\n\r\n//     case types.SEARCH:\r\n//       return { ...state, filter: payload };\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// export default reducers;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport reducers from './reducer';\r\n\r\nconst persistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(persistConfig, reducers),\r\n  },\r\n  // official fix of non-serializable data ===\r\n  middleware: getDefaultMiddleware =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }), // ===================================\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n\r\n// export default { store, persistor };\r\n\r\n//======= vinilla redux =======\r\n// import { createStore } from 'redux';\r\n// import { composeWithDevTools } from 'redux-devtools-extension';\r\n// import reducers from './reducer';\r\n\r\n// const store = createStore({\r\n//     contacts: reducers,\r\n//   }, composeWithDevTools());\r\n\r\n// export default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './components/App';\nimport { store, persistor } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Contacts_wrapper__3Uo7U\",\"contacts__list\":\"Contacts_contacts__list__DQPMa\",\"contacts__item\":\"Contacts_contacts__item__1ci8B\",\"text\":\"Contacts_text__1Uxve\",\"del__btn\":\"Contacts_del__btn__1lmPd\"};"],"sourceRoot":""}